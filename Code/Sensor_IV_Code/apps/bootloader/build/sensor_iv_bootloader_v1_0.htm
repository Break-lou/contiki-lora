<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [build\sensor_iv_bootloader_v1_0.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image build\sensor_iv_bootloader_v1_0.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Apr 28 17:11:57 2016
<BR><P>
<H3>Maximum Stack Usage =         68 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; flash_tat_init &rArr; flash_tat_get_id &rArr; flash_tat_check_idle &rArr; flash_tat_get_status &rArr; flash_hal_read_buff
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[d]">WDTIMER0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">WDTIMER0_IRQHandler</a><BR>
 <LI><a href="#[e]">PBEXT0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">PBEXT0_IRQHandler</a><BR>
 <LI><a href="#[f]">PBEXT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">PBEXT1_IRQHandler</a><BR>
 <LI><a href="#[10]">RTC0ALRM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">RTC0ALRM_IRQHandler</a><BR>
 <LI><a href="#[11]">LPTIMER0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">LPTIMER0_IRQHandler</a><BR>
 <LI><a href="#[12]">DMAERR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">DMAERR_IRQHandler</a><BR>
 <LI><a href="#[13]">DMACH0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">DMACH0_IRQHandler</a><BR>
 <LI><a href="#[14]">DMACH1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">DMACH1_IRQHandler</a><BR>
 <LI><a href="#[15]">DMACH2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">DMACH2_IRQHandler</a><BR>
 <LI><a href="#[16]">DMACH3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">DMACH3_IRQHandler</a><BR>
 <LI><a href="#[17]">DMACH4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">DMACH4_IRQHandler</a><BR>
 <LI><a href="#[18]">DMACH5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">DMACH5_IRQHandler</a><BR>
 <LI><a href="#[19]">DMACH6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">DMACH6_IRQHandler</a><BR>
 <LI><a href="#[1a]">DMACH7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">DMACH7_IRQHandler</a><BR>
 <LI><a href="#[1b]">DMACH8_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">DMACH8_IRQHandler</a><BR>
 <LI><a href="#[1c]">DMACH9_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">DMACH9_IRQHandler</a><BR>
 <LI><a href="#[1d]">TIMER0L_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">TIMER0L_IRQHandler</a><BR>
 <LI><a href="#[1e]">TIMER0H_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">TIMER0H_IRQHandler</a><BR>
 <LI><a href="#[1f]">TIMER1L_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">TIMER1L_IRQHandler</a><BR>
 <LI><a href="#[20]">TIMER1H_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">TIMER1H_IRQHandler</a><BR>
 <LI><a href="#[21]">TIMER2L_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">TIMER2L_IRQHandler</a><BR>
 <LI><a href="#[22]">TIMER2H_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">TIMER2H_IRQHandler</a><BR>
 <LI><a href="#[23]">ACCTR0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ACCTR0_IRQHandler</a><BR>
 <LI><a href="#[24]">EPCA0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">EPCA0_IRQHandler</a><BR>
 <LI><a href="#[25]">USART0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">USART0_IRQHandler</a><BR>
 <LI><a href="#[26]">UART0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">UART0_IRQHandler</a><BR>
 <LI><a href="#[27]">SPI0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">SPI0_IRQHandler</a><BR>
 <LI><a href="#[28]">SPI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">SPI1_IRQHandler</a><BR>
 <LI><a href="#[29]">I2C0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">I2C0_IRQHandler</a><BR>
 <LI><a href="#[2a]">SARADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">SARADC0_IRQHandler</a><BR>
 <LI><a href="#[2b]">CMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">CMP0_IRQHandler</a><BR>
 <LI><a href="#[2c]">CMP1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">CMP1_IRQHandler</a><BR>
 <LI><a href="#[2d]">DTM0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">DTM0_IRQHandler</a><BR>
 <LI><a href="#[2e]">DTM1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">DTM1_IRQHandler</a><BR>
 <LI><a href="#[2f]">DTM2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">DTM2_IRQHandler</a><BR>
 <LI><a href="#[30]">AES0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">AES0_IRQHandler</a><BR>
 <LI><a href="#[31]">ENCDEC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">ENCDEC0_IRQHandler</a><BR>
 <LI><a href="#[32]">RTC0FAIL_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">RTC0FAIL_IRQHandler</a><BR>
 <LI><a href="#[33]">VDDLOW_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">VDDLOW_IRQHandler</a><BR>
 <LI><a href="#[34]">VCPFAIL_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">VCPFAIL_IRQHandler</a><BR>
 <LI><a href="#[35]">DCDC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">DCDC_IRQHandler</a><BR>
 <LI><a href="#[36]">PMATCH_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">PMATCH_IRQHandler</a><BR>
 <LI><a href="#[37]">IDAC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">IDAC0_IRQHandler</a><BR>
 <LI><a href="#[38]">PLL0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">PLL0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23]">ACCTR0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[30]">AES0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2b]">CMP0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2c]">CMP1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[35]">DCDC_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[13]">DMACH0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[14]">DMACH1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[15]">DMACH2_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[16]">DMACH3_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[17]">DMACH4_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[18]">DMACH5_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[19]">DMACH6_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1a]">DMACH7_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1b]">DMACH8_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1c]">DMACH9_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[12]">DMAERR_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2d]">DTM0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2e]">DTM1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2f]">DTM2_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[31]">ENCDEC0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[24]">EPCA0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[29]">I2C0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[37]">IDAC0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[11]">LPTIMER0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[e]">PBEXT0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[f]">PBEXT1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[38]">PLL0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[36]">PMATCH_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[10]">RTC0ALRM_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[32]">RTC0FAIL_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2a]">SARADC0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[27]">SPI0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[28]">SPI1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[39]">SystemInit</a> from system_sim3l1xx.o(.text) referenced from startup_sim3l1xx_arm.o(.text)
 <LI><a href="#[1e]">TIMER0H_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1d]">TIMER0L_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[20]">TIMER1H_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1f]">TIMER1L_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[22]">TIMER2H_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[21]">TIMER2L_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[26]">UART0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[25]">USART0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[34]">VCPFAIL_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[33]">VDDLOW_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[d]">WDTIMER0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[3b]">__main</a> from __main.o(!!!main) referenced from startup_sim3l1xx_arm.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[3c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[70]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[71]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[72]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[41]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[73]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[74]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[75]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[76]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[77]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[78]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[79]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[80]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[81]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[82]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[83]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[84]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[85]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[86]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[87]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[46]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[88]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[89]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[8a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[8b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[8c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[8d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[3d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[8f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[40]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[90]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[42]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; flash_tat_init &rArr; flash_tat_get_id &rArr; flash_tat_check_idle &rArr; flash_tat_get_status &rArr; flash_hal_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[45]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[92]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[47]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[93]"></a>__asm___13_system_init_c_delay_us____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_init.o(.emb_text), UNUSED)

<P><STRONG><a name="[94]"></a>__asm___13_system_init_c_delay_us____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_init.o(.emb_text), UNUSED)

<P><STRONG><a name="[5c]"></a>delay_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system_init.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_flash_reset
</UL>

<P><STRONG><a name="[49]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, retarget_arm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ITM_SendChar
</UL>

<P><STRONG><a name="[95]"></a>fgetc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, retarget_arm.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget_arm.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>__backspace</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget_arm.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget_arm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ITM_SendChar
</UL>

<P><STRONG><a name="[48]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget_arm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WDTIMER0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTIMER0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTIMER0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PBEXT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PBEXT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0ALRM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0ALRM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0ALRM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>LPTIMER0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMAERR_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAERR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAERR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMACH0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMACH1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMACH2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMACH3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMACH4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMACH5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMACH6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMACH7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMACH8_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH8_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH8_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMACH9_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH9_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH9_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER0L_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0L_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0L_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER0H_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0H_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0H_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER1L_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1L_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1L_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER1H_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1H_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1H_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIMER2L_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2L_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2L_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER2H_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2H_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2H_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ACCTR0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCTR0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCTR0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EPCA0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPCA0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPCA0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>UART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SPI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SARADC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SARADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SARADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>CMP0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CMP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DTM0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DTM1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DTM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>AES0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>ENCDEC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCDEC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCDEC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTC0FAIL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0FAIL_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0FAIL_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>VDDLOW_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDDLOW_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDDLOW_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>VCPFAIL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCPFAIL_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCPFAIL_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DCDC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCDC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PMATCH_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMATCH_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMATCH_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>IDAC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IDAC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IDAC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>PLL0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, system_sim3l1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_sim3l1xx.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>main</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = main &rArr; flash_tat_init &rArr; flash_tat_get_id &rArr; flash_tat_check_idle &rArr; flash_tat_get_status &rArr; flash_hal_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_reset
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[56]"></a>system_clock_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[57]"></a>wdtimer_stop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[4f]"></a>led_off</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>pb_init</STRONG> (Thumb, 176 bytes, Stack size 4 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = pb_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[55]"></a>vdrv_select_vbat</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set
</UL>

<P><STRONG><a name="[54]"></a>DCDC0_clk_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set
</UL>

<P><STRONG><a name="[53]"></a>pmu_set</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = pmu_set
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCDC0_clk_enable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vdrv_select_vbat
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[4c]"></a>system_init</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_init &rArr; pmu_set
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtimer_stop
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>soft_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>led_on</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>led_green_on</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_green_toggle
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot
</UL>

<P><STRONG><a name="[59]"></a>led_green_off</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_green_toggle
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot
</UL>

<P><STRONG><a name="[58]"></a>led_green_toggle</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = led_green_toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_green_off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_green_on
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guide
</UL>

<P><STRONG><a name="[63]"></a>flash_hal_write_byte</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, ext_flash_hal.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_leave_sleep
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_enter_sleep
</UL>

<P><STRONG><a name="[99]"></a>flash_hal_read_byte</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, ext_flash_hal.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>flash_hal_read_buff</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, ext_flash_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_hal_read_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_get_id
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_get_status
</UL>

<P><STRONG><a name="[9a]"></a>flash_hal_write_buff</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, ext_flash_hal.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>flash_hal_write_then_read</STRONG> (Thumb, 308 bytes, Stack size 20 bytes, ext_flash_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_hal_write_then_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_read_data
</UL>

<P><STRONG><a name="[9b]"></a>flash_hal_write_then_write</STRONG> (Thumb, 308 bytes, Stack size 20 bytes, ext_flash_hal.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>ext_flash_spi_init</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, ext_flash_mcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ext_flash_spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_init
</UL>

<P><STRONG><a name="[67]"></a>ext_flash_port_init</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, ext_flash_mcu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_init
</UL>

<P><STRONG><a name="[5b]"></a>ext_flash_reset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ext_flash_mcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ext_flash_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_init
</UL>

<P><STRONG><a name="[5d]"></a>flash_tat_read_data</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ext_flash_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = flash_tat_read_data &rArr; flash_hal_write_then_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_hal_write_then_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guide
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_calc_crc
</UL>

<P><STRONG><a name="[5f]"></a>flash_tat_get_status</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ext_flash_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = flash_tat_get_status &rArr; flash_hal_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_hal_read_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_check_idle
</UL>

<P><STRONG><a name="[61]"></a>flash_tat_check_idle</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ext_flash_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = flash_tat_check_idle &rArr; flash_tat_get_status &rArr; flash_hal_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_get_id
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_wait_sleep
</UL>

<P><STRONG><a name="[62]"></a>flash_tat_enter_sleep</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ext_flash_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_hal_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_wait_sleep
</UL>

<P><STRONG><a name="[64]"></a>flash_tat_wait_sleep</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ext_flash_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_enter_sleep
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_check_idle
</UL>

<P><STRONG><a name="[65]"></a>flash_tat_leave_sleep</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ext_flash_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_hal_write_byte
</UL>

<P><STRONG><a name="[66]"></a>flash_tat_get_id</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ext_flash_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = flash_tat_get_id &rArr; flash_tat_check_idle &rArr; flash_tat_get_status &rArr; flash_hal_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_check_idle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_hal_read_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_init
</UL>

<P><STRONG><a name="[4e]"></a>flash_tat_init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ext_flash_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = flash_tat_init &rArr; flash_tat_get_id &rArr; flash_tat_check_idle &rArr; flash_tat_get_status &rArr; flash_hal_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_get_id
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_flash_reset
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_flash_port_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_flash_spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>erase_flash</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, inchip_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = erase_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guide
</UL>

<P><STRONG><a name="[6d]"></a>write_to_flash_from_buff</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, inchip_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = write_to_flash_from_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guide
</UL>

<P><STRONG><a name="[6e]"></a>read_from_flash_to_buff</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, inchip_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_from_flash_to_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot
</UL>

<P><STRONG><a name="[69]"></a>boot_calc_crc</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, boot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = boot_calc_crc &rArr; flash_tat_read_data &rArr; flash_hal_write_then_read
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_compute
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot
</UL>

<P><STRONG><a name="[6b]"></a>guide</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, boot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = guide &rArr; flash_tat_read_data &rArr; flash_hal_write_then_read
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_to_flash_from_buff
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_tat_read_data
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_green_toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot
</UL>

<P><STRONG><a name="[50]"></a>boot</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, boot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = boot &rArr; guide &rArr; flash_tat_read_data &rArr; flash_hal_write_then_read
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guide
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_calc_crc
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_from_flash_to_buff
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_green_off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_green_on
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>DEVICE_RedirectInterrupts</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boot.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>crc_compute</STRONG> (Thumb, 176 bytes, Stack size 28 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = crc_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_calc_crc
</UL>

<P><STRONG><a name="[9d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4a]"></a>ITM_SendChar</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, retarget_arm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
