//-----------------------------------------------------------------------------
// Copyright (c) 2012 by Silicon Laboratories 
// All rights reserved. This program and the accompanying materials
// are made available under the terms of the Silicon Laboratories End User 
// License Agreement which accompanies this distribution, and is available at
// http://developer.silabs.com/legal/version/v10/License_Agreement_v10.htm
// Original content and implementation provided by Silicon Laboratories.
//-----------------------------------------------------------------------------
//
// This file applies to the SIM3L1XX_CLKCTRL_A module
//
// Script: 0.61
// Version: 1

#ifndef __SI32_CLKCTRL_A_REGISTERS_H__
#define __SI32_CLKCTRL_A_REGISTERS_H__

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

struct SI32_CLKCTRL_A_CONTROL_Struct
{
   union
   {
      struct
      {
         // AHB Clock Source Select
         volatile uint32_t AHBSEL: 3;
                  uint32_t reserved0: 5;
         // AHB Clock Divider
         volatile uint32_t AHBDIV: 3;
                  uint32_t reserved1: 5;
         // APB Clock Divider
         volatile uint32_t APBDIV: 1;
                  uint32_t reserved2: 11;
         // External Clock Edge Select
         volatile uint32_t EXTESEL: 1;
         // Oscillators Busy Flag
         volatile uint32_t OBUSYF: 1;
         // VIORF Clock Enable
         volatile uint32_t VIORFCLKEN: 1;
         // External Clock Input Enable
         volatile uint32_t EXTOSCEN: 1;
      };
      volatile uint32_t U32;
   };
};

#define SI32_CLKCTRL_A_CONTROL_AHBSEL_MASK  0x00000007
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT  0
// AHB clock source is the Low-Power Oscillator.
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_LPOSC0_VALUE  0
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_LPOSC0_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBSEL_LPOSC0_VALUE << SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT)
// AHB clock source is the Low-Frequency Oscillator.
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_LFOSC0_VALUE  1
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_LFOSC0_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBSEL_LFOSC0_VALUE << SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT)
// AHB clock source is the RTC0TCLK signal.
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_RTC0TCLK_VALUE  2
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_RTC0TCLK_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBSEL_RTC0TCLK_VALUE << SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT)
// AHB clock source is the External Oscillator.
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_EXTOSC0_VALUE  3
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_EXTOSC0_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBSEL_EXTOSC0_VALUE << SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT)
// AHB clock source is the VIORFCLK input pin.
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_VIORFCLK_VALUE  4
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_VIORFCLK_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBSEL_VIORFCLK_VALUE << SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT)
// AHB clock source is the PLL.
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_PLL0OSC_VALUE  5
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_PLL0OSC_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBSEL_PLL0OSC_VALUE << SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT)
// AHB clock source is a divided version of the Low-Power Oscillator.
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_LPOSC0_DIV_VALUE  6
#define SI32_CLKCTRL_A_CONTROL_AHBSEL_LPOSC0_DIV_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBSEL_LPOSC0_DIV_VALUE << SI32_CLKCTRL_A_CONTROL_AHBSEL_SHIFT)

#define SI32_CLKCTRL_A_CONTROL_AHBDIV_MASK  0x00000700
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT  8
// AHB clock divided by 1.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV1_VALUE  0
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV1_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV1_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)
// AHB clock divided by 2.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV2_VALUE  1
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV2_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV2_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)
// AHB clock divided by 4.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV4_VALUE  2
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV4_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV4_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)
// AHB clock divided by 8.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV8_VALUE  3
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV8_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV8_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)
// AHB clock divided by 16.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV16_VALUE  4
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV16_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV16_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)
// AHB clock divided by 32.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV32_VALUE  5
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV32_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV32_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)
// AHB clock divided by 64.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV64_VALUE  6
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV64_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV64_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)
// AHB clock divided by 128.
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV128_VALUE  7
#define SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV128_U32 \
   (SI32_CLKCTRL_A_CONTROL_AHBDIV_DIV128_VALUE << SI32_CLKCTRL_A_CONTROL_AHBDIV_SHIFT)

#define SI32_CLKCTRL_A_CONTROL_APBDIV_MASK  0x00010000
#define SI32_CLKCTRL_A_CONTROL_APBDIV_SHIFT  16
// APB clock is the same as the AHB clock (divided by 1).
#define SI32_CLKCTRL_A_CONTROL_APBDIV_DIV1_VALUE  0
#define SI32_CLKCTRL_A_CONTROL_APBDIV_DIV1_U32 \
   (SI32_CLKCTRL_A_CONTROL_APBDIV_DIV1_VALUE << SI32_CLKCTRL_A_CONTROL_APBDIV_SHIFT)
// APB clock is the AHB clock divided by 2.
#define SI32_CLKCTRL_A_CONTROL_APBDIV_DIV2_VALUE  1
#define SI32_CLKCTRL_A_CONTROL_APBDIV_DIV2_U32 \
   (SI32_CLKCTRL_A_CONTROL_APBDIV_DIV2_VALUE << SI32_CLKCTRL_A_CONTROL_APBDIV_SHIFT)

#define SI32_CLKCTRL_A_CONTROL_EXTESEL_MASK  0x10000000
#define SI32_CLKCTRL_A_CONTROL_EXTESEL_SHIFT  28
// External clock generated by both rising and falling edges of the external
// oscillator.
#define SI32_CLKCTRL_A_CONTROL_EXTESEL_BOTH_EDGES_VALUE  0
#define SI32_CLKCTRL_A_CONTROL_EXTESEL_BOTH_EDGES_U32 \
   (SI32_CLKCTRL_A_CONTROL_EXTESEL_BOTH_EDGES_VALUE << SI32_CLKCTRL_A_CONTROL_EXTESEL_SHIFT)
// External clock generated by only rising edges of the external oscillator.
#define SI32_CLKCTRL_A_CONTROL_EXTESEL_RISING_ONLY_VALUE  1
#define SI32_CLKCTRL_A_CONTROL_EXTESEL_RISING_ONLY_U32 \
   (SI32_CLKCTRL_A_CONTROL_EXTESEL_RISING_ONLY_VALUE << SI32_CLKCTRL_A_CONTROL_EXTESEL_SHIFT)

#define SI32_CLKCTRL_A_CONTROL_OBUSYF_MASK  0x20000000
#define SI32_CLKCTRL_A_CONTROL_OBUSYF_SHIFT  29
// AHB and APB oscillators are not busy.
#define SI32_CLKCTRL_A_CONTROL_OBUSYF_NOT_SET_VALUE  0
#define SI32_CLKCTRL_A_CONTROL_OBUSYF_NOT_SET_U32 \
   (SI32_CLKCTRL_A_CONTROL_OBUSYF_NOT_SET_VALUE << SI32_CLKCTRL_A_CONTROL_OBUSYF_SHIFT)
// AHB and APB oscillators are busy and the AHBSEL, AHBDIV, and APBDIV fields
// should not be modified.
#define SI32_CLKCTRL_A_CONTROL_OBUSYF_SET_VALUE  1
#define SI32_CLKCTRL_A_CONTROL_OBUSYF_SET_U32 \
   (SI32_CLKCTRL_A_CONTROL_OBUSYF_SET_VALUE << SI32_CLKCTRL_A_CONTROL_OBUSYF_SHIFT)

#define SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_MASK  0x40000000
#define SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_SHIFT  30
// Disable the VIORFCLK input.
#define SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_DISABLED_VALUE << SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_SHIFT)
// Enable the VIORFCLK input.
#define SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_ENABLED_VALUE << SI32_CLKCTRL_A_CONTROL_VIORFCLKEN_SHIFT)

#define SI32_CLKCTRL_A_CONTROL_EXTOSCEN_MASK  0x80000000
#define SI32_CLKCTRL_A_CONTROL_EXTOSCEN_SHIFT  31
// Disable the EXTOSC input.
#define SI32_CLKCTRL_A_CONTROL_EXTOSCEN_DISABLED_VALUE  0U
#define SI32_CLKCTRL_A_CONTROL_EXTOSCEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_CONTROL_EXTOSCEN_DISABLED_VALUE << SI32_CLKCTRL_A_CONTROL_EXTOSCEN_SHIFT)
// Enable the EXTOSC input.
#define SI32_CLKCTRL_A_CONTROL_EXTOSCEN_ENABLED_VALUE  1U
#define SI32_CLKCTRL_A_CONTROL_EXTOSCEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_CONTROL_EXTOSCEN_ENABLED_VALUE << SI32_CLKCTRL_A_CONTROL_EXTOSCEN_SHIFT)



struct SI32_CLKCTRL_A_AHBCLKG_Struct
{
   union
   {
      struct
      {
         // RAM Clock Enable
         volatile uint32_t RAMCEN: 1;
         // DMA Clock Enable
         volatile uint32_t DMACEN: 1;
         // Flash Clock Enable
         volatile uint32_t FLASHCEN: 1;
         // DTM0 Clock Enable
         volatile uint32_t DTM0EN: 1;
         // DTM1 Clock Enable
         volatile uint32_t DTM1EN: 1;
         // DTM2 Clock Enable
         volatile uint32_t DTM2EN: 1;
                  uint32_t reserved0: 26;
      };
      volatile uint32_t U32;
   };
};

#define SI32_CLKCTRL_A_AHBCLKG_RAMCEN_MASK  0x00000001
#define SI32_CLKCTRL_A_AHBCLKG_RAMCEN_SHIFT  0
// Disable the AHB clock to the RAM.
#define SI32_CLKCTRL_A_AHBCLKG_RAMCEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_AHBCLKG_RAMCEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_RAMCEN_DISABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_RAMCEN_SHIFT)
// Enable the AHB clock to the RAM.
#define SI32_CLKCTRL_A_AHBCLKG_RAMCEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_AHBCLKG_RAMCEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_RAMCEN_ENABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_RAMCEN_SHIFT)

#define SI32_CLKCTRL_A_AHBCLKG_DMACEN_MASK  0x00000002
#define SI32_CLKCTRL_A_AHBCLKG_DMACEN_SHIFT  1
// Disable the AHB clock to the DMA Controller.
#define SI32_CLKCTRL_A_AHBCLKG_DMACEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_AHBCLKG_DMACEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DMACEN_DISABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DMACEN_SHIFT)
// Enable the AHB clock to the DMA Controller.
#define SI32_CLKCTRL_A_AHBCLKG_DMACEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_AHBCLKG_DMACEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DMACEN_ENABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DMACEN_SHIFT)

#define SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_MASK  0x00000004
#define SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_SHIFT  2
// Disable the AHB clock to the Flash.
#define SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_DISABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_SHIFT)
// Enable the AHB clock to the Flash.
#define SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_ENABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_FLASHCEN_SHIFT)

#define SI32_CLKCTRL_A_AHBCLKG_DTM0EN_MASK  0x00000008
#define SI32_CLKCTRL_A_AHBCLKG_DTM0EN_SHIFT  3
// Disable the AHB clock to Data Transfer Manager 0 (DTM0).
#define SI32_CLKCTRL_A_AHBCLKG_DTM0EN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_AHBCLKG_DTM0EN_DISABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DTM0EN_DISABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DTM0EN_SHIFT)
// Enable the AHB clock to Data Transfer Manager 0 (DTM0).
#define SI32_CLKCTRL_A_AHBCLKG_DTM0EN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_AHBCLKG_DTM0EN_ENABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DTM0EN_ENABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DTM0EN_SHIFT)

#define SI32_CLKCTRL_A_AHBCLKG_DTM1EN_MASK  0x00000010
#define SI32_CLKCTRL_A_AHBCLKG_DTM1EN_SHIFT  4
// Disable the AHB clock to Data Transfer Manager 1 (DTM1).
#define SI32_CLKCTRL_A_AHBCLKG_DTM1EN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_AHBCLKG_DTM1EN_DISABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DTM1EN_DISABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DTM1EN_SHIFT)
// Enable the AHB clock to Data Transfer Manager 1 (DTM1).
#define SI32_CLKCTRL_A_AHBCLKG_DTM1EN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_AHBCLKG_DTM1EN_ENABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DTM1EN_ENABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DTM1EN_SHIFT)

#define SI32_CLKCTRL_A_AHBCLKG_DTM2EN_MASK  0x00000020
#define SI32_CLKCTRL_A_AHBCLKG_DTM2EN_SHIFT  5
// Disable the AHB clock to Data Transfer Manager 2 (DTM2).
#define SI32_CLKCTRL_A_AHBCLKG_DTM2EN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_AHBCLKG_DTM2EN_DISABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DTM2EN_DISABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DTM2EN_SHIFT)
// Enable the AHB clock to Data Transfer Manager 2 (DTM2).
#define SI32_CLKCTRL_A_AHBCLKG_DTM2EN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_AHBCLKG_DTM2EN_ENABLED_U32 \
   (SI32_CLKCTRL_A_AHBCLKG_DTM2EN_ENABLED_VALUE << SI32_CLKCTRL_A_AHBCLKG_DTM2EN_SHIFT)



struct SI32_CLKCTRL_A_APBCLKG0_Struct
{
   union
   {
      struct
      {
         // Flash Controller Clock Enable
         volatile uint32_t FLCTRLCEN: 1;
         // Port Bank Clock Enable
         volatile uint32_t PB0CEN: 1;
         // USART0 Clock Enable
         volatile uint32_t USART0CEN: 1;
         // UART0 Clock Enable
         volatile uint32_t UART0CEN: 1;
         // SPI0 Clock Enable
         volatile uint32_t SPI0CEN: 1;
         // SPI1 Clock Enable
         volatile uint32_t SPI1CEN: 1;
         // I2C0 Clock Enable
         volatile uint32_t I2C0CEN: 1;
         // EPCA0 Clock Enable
         volatile uint32_t EPCA0CEN: 1;
         // TIMER0 Clock Enable
         volatile uint32_t TIMER0CEN: 1;
         // TIMER1 Clock Enable
         volatile uint32_t TIMER1CEN: 1;
         // TIMER2 Clock Enable
         volatile uint32_t TIMER2CEN: 1;
         // SARADC0 Clock Enable
         volatile uint32_t ADC0CEN: 1;
         // CMP0 Clock Enable
         volatile uint32_t CMP0CEN: 1;
         // CMP1 Clock Enable
         volatile uint32_t CMP1CEN: 1;
         // AES0 Clock Enable
         volatile uint32_t AES0CEN: 1;
         // CRC0 Clock Enable
         volatile uint32_t CRC0CEN: 1;
         // IDAC0 Clock Enable
         volatile uint32_t IDAC0CEN: 1;
         // LPT0 Clock Enable
         volatile uint32_t LPT0CEN: 1;
         // ACCTR0 Enable
         volatile uint32_t ACCTR0CEN: 1;
         // DTM0 Clock Enable
         volatile uint32_t DTM0CEN: 1;
         // DTM1 Clock Enable
         volatile uint32_t DTM1CEN: 1;
         // DTM2 Clock Enable
         volatile uint32_t DTM2CEN: 1;
         // LCD0 Clock Enable
         volatile uint32_t LCD0CEN: 1;
         // DCDC0 Clock Enable
         volatile uint32_t DCDC0CEN: 1;
         // ENCDEC0 Clock Enable
         volatile uint32_t ENCDEC0CEN: 1;
         // PLL0 Clock Enable
         volatile uint32_t PLL0CEN: 1;
                  uint32_t reserved0: 6;
      };
      volatile uint32_t U32;
   };
};

#define SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_MASK  0x00000001
#define SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_SHIFT  0
// Disable the APB clock to the Flash Controller Module (FLASHCTRL0).
#define SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_SHIFT)
// Enable the APB clock to the Flash Controller Module (FLASHCTRL0).
#define SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_FLCTRLCEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_PB0CEN_MASK  0x00000002
#define SI32_CLKCTRL_A_APBCLKG0_PB0CEN_SHIFT  1
// Disable the APB clock to the Port Bank Modules.
#define SI32_CLKCTRL_A_APBCLKG0_PB0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_PB0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_PB0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_PB0CEN_SHIFT)
// Enable the APB clock to the Port Bank Modules.
#define SI32_CLKCTRL_A_APBCLKG0_PB0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_PB0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_PB0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_PB0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_USART0CEN_MASK  0x00000004
#define SI32_CLKCTRL_A_APBCLKG0_USART0CEN_SHIFT  2
// Disable the APB clock to the USART0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_USART0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_USART0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_USART0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_USART0CEN_SHIFT)
// Enable the APB clock to the USART0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_USART0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_USART0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_USART0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_USART0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_UART0CEN_MASK  0x00000008
#define SI32_CLKCTRL_A_APBCLKG0_UART0CEN_SHIFT  3
// Disable the APB clock to the UART0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_UART0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_UART0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_UART0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_UART0CEN_SHIFT)
// Enable the APB clock to the UART0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_UART0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_UART0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_UART0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_UART0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_MASK  0x00000010
#define SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_SHIFT  4
// Disable the APB clock to the SPI0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_SHIFT)
// Enable the APB clock to the SPI0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_SPI0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_MASK  0x00000020
#define SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_SHIFT  5
// Disable the APB clock to the SPI1 Module.
#define SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_SHIFT)
// Enable the APB clock to the SPI1 Module.
#define SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_SPI1CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_MASK  0x00000040
#define SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_SHIFT  6
// Disable the APB clock to the I2C0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_SHIFT)
// Enable the APB clock to the I2C0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_I2C0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_MASK  0x00000080
#define SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_SHIFT  7
// Disable the APB clock to the EPCA0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_SHIFT)
// Enable the APB clock to the EPCA0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_EPCA0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_MASK  0x00000100
#define SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_SHIFT  8
// Disable the APB clock to the TIMER0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_SHIFT)
// Enable the APB clock to the TIMER0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_TIMER0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_MASK  0x00000200
#define SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_SHIFT  9
// Disable the APB clock to the TIMER1 Module.
#define SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_SHIFT)
// Enable the APB clock to the TIMER1 Module.
#define SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_TIMER1CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_MASK  0x00000400
#define SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_SHIFT  10
// Disable the APB clock to the TIMER2 Module.
#define SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_SHIFT)
// Enable the APB clock to the TIMER2 Module.
#define SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_TIMER2CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_MASK  0x00000800
#define SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_SHIFT  11
// Disable the APB clock to the SARADC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_SHIFT)
// Enable the APB clock to the SARADC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_ADC0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_MASK  0x00001000
#define SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_SHIFT  12
// Disable the APB clock to the Comparator 0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_SHIFT)
// Enable the APB clock to the Comparator 0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_CMP0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_MASK  0x00002000
#define SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_SHIFT  13
// Disable the APB clock to the Comparator 1 Module.
#define SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_SHIFT)
// Enable the APB clock to the Comparator 1 Module.
#define SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_CMP1CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_AES0CEN_MASK  0x00004000
#define SI32_CLKCTRL_A_APBCLKG0_AES0CEN_SHIFT  14
// Disable the APB clock to the AES0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_AES0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_AES0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_AES0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_AES0CEN_SHIFT)
// Enable the APB clock to the AES0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_AES0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_AES0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_AES0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_AES0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_MASK  0x00008000
#define SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_SHIFT  15
// Disable the APB clock to the CRC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_SHIFT)
// Enable the APB clock to the CRC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_CRC0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_MASK  0x00010000
#define SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_SHIFT  16
// Disable the APB clock to the IDAC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_SHIFT)
// Enable the APB clock to the IDAC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_IDAC0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_MASK  0x00020000
#define SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_SHIFT  17
// Disable the APB clock to the LPTIMER0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_SHIFT)
// Enable the APB clock to the LPTIMER0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_LPT0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_MASK  0x00040000
#define SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_SHIFT  18
// Disable the APB clock to the ACCTR0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_SHIFT)
// Enable the APB clock to the ACCTR0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_ACCTR0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_MASK  0x00080000
#define SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_SHIFT  19
// Disable the APB clock to the DTM0 Register interface.
#define SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_SHIFT)
// Enable the APB clock to the DTM0 Register interface.
#define SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DTM0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_MASK  0x00100000
#define SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_SHIFT  20
// Disable the APB clock to the DTM1 Register interface.
#define SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_SHIFT)
// Enable the APB clock to the DTM1 Register interface.
#define SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DTM1CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_MASK  0x00200000
#define SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_SHIFT  21
// Disable the APB clock to the DTM2 Register interface.
#define SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_SHIFT)
// Enable the APB clock to the DTM2 Register interface.
#define SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DTM2CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_MASK  0x00400000
#define SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_SHIFT  22
// Disable the APB clock to the LCD0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_SHIFT)
// Enable the APB clock to the LCD0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_LCD0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_MASK  0x00800000
#define SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_SHIFT  23
// Disable the APB clock to the DCDC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_SHIFT)
// Enable the APB clock to the DCDC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_DCDC0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_MASK  0x01000000
#define SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_SHIFT  24
// Disable the APB clock to the ENCDEC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_SHIFT)
// Enable the APB clock to the ENCDEC0 Module.
#define SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_ENCDEC0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_MASK  0x02000000
#define SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_SHIFT  25
// Disable the APB clock to the PLL0 registers.
#define SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_SHIFT)
// Enable the APB clock to the PLL0 registers.
#define SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG0_PLL0CEN_SHIFT)



struct SI32_CLKCTRL_A_APBCLKG1_Struct
{
   union
   {
      struct
      {
         // Miscellaneous 0 Clock Enable
         volatile uint32_t MISC0CEN: 1;
         // Miscellaneous 1 Clock Enable
         volatile uint32_t MISC1CEN: 1;
                  uint32_t reserved0: 30;
      };
      volatile uint32_t U32;
   };
};

#define SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_MASK  0x00000001
#define SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_SHIFT  0
// Disable the APB clock to the VMON0, LDO0, EXTOSC0, LPOSC0, RTC0 and RSTSRC
// modules.
#define SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_SHIFT)
// Enable the APB clock to the VMON0, LDO0, EXTOSC0, LPOSC0, RTC0 and RSTSRC
// modules.
#define SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG1_MISC0CEN_SHIFT)

#define SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_MASK  0x00000002
#define SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_SHIFT  1
// Disable the APB clock to the  Watchdog Timer (WDTIMER0) and DMA Crossbar
// (DMAXBAR0) modules.
#define SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_DISABLED_VALUE << SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_SHIFT)
// Enable the APB clock to the  Watchdog Timer (WDTIMER0) and DMA Crossbar
// (DMAXBAR0) modules.
#define SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_ENABLED_VALUE << SI32_CLKCTRL_A_APBCLKG1_MISC1CEN_SHIFT)



struct SI32_CLKCTRL_A_PM3CN_Struct
{
   union
   {
      struct
      {
         // Power Mode 3 Fast-Wake Clock Source
         volatile uint32_t PM3CSEL: 3;
                  uint32_t reserved0: 13;
         // Power Mode 3 Fast-Wake Clock Enable
         volatile uint32_t PM3CEN: 1;
                  uint32_t reserved1: 15;
      };
      volatile uint32_t U32;
   };
};

#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_MASK  0x00000007
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT  0
// Power Mode 3 clock source is the Low-Power Oscillator.
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_LPOSC0_VALUE  0
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_LPOSC0_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CSEL_LPOSC0_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT)
// Power Mode 3 clock source is the Low-Frequency Oscillator.
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_LFOSC0_VALUE  1
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_LFOSC0_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CSEL_LFOSC0_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT)
// Power Mode 3 clock source is the RTC0TCLK signal.
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_RTC0TCLK_VALUE  2
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_RTC0TCLK_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CSEL_RTC0TCLK_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT)
// Power Mode 3 clock source is the External Oscillator.
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_EXTOSC0_VALUE  3
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_EXTOSC0_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CSEL_EXTOSC0_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT)
// Power Mode 3 clock source is the VIORFCLK input pin.
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_VIORFCLK_VALUE  4
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_VIORFCLK_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CSEL_VIORFCLK_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT)
// Power Mode 3 clock source is the PLL.
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_PLL0OSC_VALUE  5
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_PLL0OSC_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CSEL_PLL0OSC_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT)
// Power Mode 3 clock source is a divided version of the Low-Power Oscillator.
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_LPOSC0_DIV_VALUE  6
#define SI32_CLKCTRL_A_PM3CN_PM3CSEL_LPOSC0_DIV_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CSEL_LPOSC0_DIV_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CSEL_SHIFT)

#define SI32_CLKCTRL_A_PM3CN_PM3CEN_MASK  0x00010000
#define SI32_CLKCTRL_A_PM3CN_PM3CEN_SHIFT  16
// Disable the core clock when in Power Mode 3.
#define SI32_CLKCTRL_A_PM3CN_PM3CEN_DISABLED_VALUE  0
#define SI32_CLKCTRL_A_PM3CN_PM3CEN_DISABLED_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CEN_DISABLED_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CEN_SHIFT)
// The core clock is enabled and runs off the clock selected by PM3CSEL in Power
// Mode 3.
#define SI32_CLKCTRL_A_PM3CN_PM3CEN_ENABLED_VALUE  1
#define SI32_CLKCTRL_A_PM3CN_PM3CEN_ENABLED_U32 \
   (SI32_CLKCTRL_A_PM3CN_PM3CEN_ENABLED_VALUE << SI32_CLKCTRL_A_PM3CN_PM3CEN_SHIFT)



struct SI32_CLKCTRL_A_CONFIG_Struct
{
   union
   {
      struct
      {
         // Power Mode Select
         volatile uint32_t PMSEL: 1;
                  uint32_t reserved0: 31;
      };
      volatile uint32_t U32;
   };
};

#define SI32_CLKCTRL_A_CONFIG_PMSEL_MASK  0x00000001
#define SI32_CLKCTRL_A_CONFIG_PMSEL_SHIFT  0
// Power Mode < PM8.
#define SI32_CLKCTRL_A_CONFIG_PMSEL_PM8_DIS_VALUE  0
#define SI32_CLKCTRL_A_CONFIG_PMSEL_PM8_DIS_U32 \
   (SI32_CLKCTRL_A_CONFIG_PMSEL_PM8_DIS_VALUE << SI32_CLKCTRL_A_CONFIG_PMSEL_SHIFT)
// Power Mode = PM8.
#define SI32_CLKCTRL_A_CONFIG_PMSEL_PM8_EN_VALUE  1
#define SI32_CLKCTRL_A_CONFIG_PMSEL_PM8_EN_U32 \
   (SI32_CLKCTRL_A_CONFIG_PMSEL_PM8_EN_VALUE << SI32_CLKCTRL_A_CONFIG_PMSEL_SHIFT)



typedef struct SI32_CLKCTRL_A_Struct
{
   struct SI32_CLKCTRL_A_CONTROL_Struct            CONTROL        ; // Base Address + 0x0
   uint32_t                                        reserved0;
   uint32_t                                        reserved1;
   uint32_t                                        reserved2;
   struct SI32_CLKCTRL_A_AHBCLKG_Struct            AHBCLKG        ; // Base Address + 0x10
   volatile uint32_t                               AHBCLKG_SET;
   volatile uint32_t                               AHBCLKG_CLR;
   uint32_t                                        reserved3;
   struct SI32_CLKCTRL_A_APBCLKG0_Struct           APBCLKG0       ; // Base Address + 0x20
   volatile uint32_t                               APBCLKG0_SET;
   volatile uint32_t                               APBCLKG0_CLR;
   uint32_t                                        reserved4;
   struct SI32_CLKCTRL_A_APBCLKG1_Struct           APBCLKG1       ; // Base Address + 0x30
   volatile uint32_t                               APBCLKG1_SET;
   volatile uint32_t                               APBCLKG1_CLR;
   uint32_t                                        reserved5;
   struct SI32_CLKCTRL_A_PM3CN_Struct              PM3CN          ; // Base Address + 0x40
   uint32_t                                        reserved6;
   uint32_t                                        reserved7;
   uint32_t                                        reserved8;
   uint32_t                                        reserved9[4];
   struct SI32_CLKCTRL_A_CONFIG_Struct             CONFIG         ; // Base Address + 0x60
   volatile uint32_t                               CONFIG_SET;
   volatile uint32_t                               CONFIG_CLR;
   uint32_t                                        reserved10;
   uint32_t                                        reserved11[4];
} SI32_CLKCTRL_A_Type;

#ifdef __cplusplus
}
#endif

#endif // __SI32_CLKCTRL_A_REGISTERS_H__

//-eof--------------------------------------------------------------------------

